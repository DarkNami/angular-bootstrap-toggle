!function(){"use strict";angular.module("ui.toggle",[]).value("$toggleSuppressError",!1).constant("toggleConfig",{btnCheckboxFalse:!1,btnCheckboxTrue:!0,on:"On",off:"Off",size:"",onstyle:"btn-primary",offstyle:"btn-default",toggleStyle:"",width:"",height:"",disabled:!1}).controller("ToggleController",["$scope","$attrs","$interpolate","$log","toggleConfig","$toggleSuppressError","$parse",function(e,t,n,l,a,s,r){function o(e,t,n,l,a){var s;if(angular.isDefined(l)){if(s=e(l),!s.constant)throw angular.ngModelMinErr("constexpr","Expected constant expression for `{0}`, but saw `{1}`.",n,l);return s(t)}return a}var i,g,f,u=this,c={$setViewValue:angular.noop},p=Object.keys(a),d=o(r,e,"ngTrueValue",t.ngTrueValue,!0),h=o(r,e,"ngFalseValue",t.ngFalseValue,!1);angular.forEach(p,function(l,s){if(angular.isDefined(t[l]))switch(typeof a[l]){case"string":u[l]=n(t[l])(e.$parent);break;case"function":break;default:u[l]=e.$parent.$eval(t[l])}else u[l]=a[l]}),this.init=function(n){c=n,i=u.element.find("label"),g=u.element.find("span"),f=u.element.find("div"),angular.element(i[0]).html(u.on),angular.element(i[1]).html(u.off),u.computeStyle(),c.$render=function(){u.toggle()},angular.isDefined(t.ngChange)&&c.$viewChangeListeners.push(function(){e.$eval(t.ngChange)})},this.computeStyle=function(){if(angular.element(i[0]).attr("disabled",u.disabled),angular.element(i[1]).attr("disabled",u.disabled),angular.element(g[0]).attr("disabled",u.disabled),e.wrapperStyle=u.toggleStyle?e.$parent.$eval(u.toggleStyle):{},u.width)e.wrapperStyle.width=u.width;else{var t=Math.max(i[0].offsetWidth,i[1].offsetWidth),n=f[0].offsetWidth;n<t?e.wrapperStyle.width=t+"px":e.wrapperStyle.width=n+"px"}if(u.height)e.wrapperStyle.height=u.height;else{var l=Math.max(i[0].offsetHeight,i[1].offsetHeight),a=f[1].offsetHeight;a<l&&"btn-xs"!==u.size&&"btn-sm"!==u.size?e.wrapperStyle.height=l+"px":e.wrapperStyle.height=a+"px"}e.onClass=[u.onstyle,u.size,"toggle-on"],e.offClass=[u.offstyle,u.size,"toggle-off"],e.handleClass=[u.size,"toggle-handle"]},this.toggle=function(){angular.isDefined(c.$viewValue)&&angular.equals(c.$viewValue,d)?e.wrapperClass=[u.onstyle,u.size,u.style]:e.wrapperClass=[u.offstyle,"off ",u.size,u.style]},e.onSwitch=function(e){return!u.disabled&&(c.$setViewValue(angular.equals(c.$viewValue,d)?h:d),c.$render(),!0)},angular.forEach(["ngModel"],function(n){var l=e.$parent.$watch(t[n],function(e){c.$render()});e.$parent.$on("$destroy",function(){l()})}),angular.forEach(p,function(e,n){t.$observe(e,function(t){u[e]!==t&&(u[e]=t,u.computeStyle())})})}]).directive("toggle",function(){return{restrict:"E",transclude:!0,template:'<div class="toggle btn" ng-class="wrapperClass" ng-style="wrapperStyle" ng-click="onSwitch($event)"><div class="toggle-group"><label class="btn" ng-class="onClass"></label><label class="btn active" ng-class="offClass"></label><span class="btn btn-default" ng-class="handleClass"></span></div></div>',scope:{ngModel:"="},require:["toggle","ngModel"],controller:"ToggleController",controllerAs:"toggle",compile:function(e,t,n){return{pre:function(e,t,n,l){var a=l[0],s=l[1];a.element=t,a.init(s)},post:function(){}}}}})}();