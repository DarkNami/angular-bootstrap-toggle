!function(){"use strict";angular.module("ui.toggle",[]).value("$toggleSuppressError",!1).constant("toggleConfig",{btnCheckboxFalse:!1,btnCheckboxTrue:!0,on:"On",off:"Off",size:"",onClass:"btn-primary",onstyle:"",offClass:"btn-default",offstyle:"",toggleStyle:"",width:"",height:"",disabled:!1}).controller("ToggleController",["$scope","$attrs","$interpolate","$log","toggleConfig","$toggleSuppressError",function(e,t,l,n,a,o){var s,r=this,i=Object.keys(a);angular.forEach(i,function(n,o){if(angular.isDefined(t[n]))switch(typeof a[n]){case"string":r[n]=l(t[n])(e.$parent);break;case"function":break;default:r[n]=e.$parent.$eval(t[n])}else r[n]=a[n]}),r.onstyle&&(r.onClass=r.onstyle),r.offstyle&&(r.offClass=r.offstyle),this.init=function(l){s=l;var n=r.element.find("label"),a=r.element.find("span"),o=r.element.find("div");r.wrapperElement=o[0],r.onElement=n[0],r.offElement=n[1],r.handleElement=a[0],angular.element(r.onElement).html(r.on),angular.element(r.offElement).html(r.off),r.computeStyle(),s.$render=function(){r.toggle()},angular.isDefined(t.ngChange)&&s.$viewChangeListeners.push(function(){e.$eval(t.ngChange)})},this.computeStyle=function(){if(angular.element(r.onElement).attr("disabled",r.disabled),angular.element(r.offElement).attr("disabled",r.disabled),angular.element(r.handleElement).attr("disabled",r.disabled),e.wrapperStyle=r.toggleStyle?e.$parent.$eval(r.toggleStyle):{},r.width)e.wrapperStyle.width=r.width;else{var t=Math.max(r.onElement.scrollWidth,r.offElement.scrollWidth)+24,l=r.wrapperElement.scrollWidth;l<t?e.wrapperStyle.width=t+"px":e.wrapperStyle.width=l+"px"}if(r.height)e.wrapperStyle.height=r.height;else{var n=Math.max(r.onElement.offsetHeight,r.offElement.offsetHeight),a=r.wrapperElement.offsetHeight;a<n&&"btn-xs"!==r.size&&"btn-sm"!==r.size?e.wrapperStyle.height=n+"px":e.wrapperStyle.height=a+"px"}e.onComputedClass=[r.onClass,r.size,"toggle-on"],e.offComputedClass=[r.offClass,r.size,"toggle-off"],e.handleComputedClass=[r.size,"toggle-handle"]},this.toggle=function(){s.$viewValue?angular.element(r.wrapperElement).removeClass("off "+r.offClass).addClass(r.onClass):angular.element(r.wrapperElement).addClass("off "+r.offClass).removeClass(r.onClass)},e.onSwitch=function(e){return!r.disabled&&(s.$setViewValue(!s.$viewValue),s.$render(),!0)},angular.forEach(i,function(e,l){t.$observe(e,function(t){r[e]!==t&&(r[e]=t,r.computeStyle())})})}]).directive("toggle",function(){return{restrict:"E",template:'<div ng-cloak class="toggle btn off" ng-style="wrapperStyle"ng-click="onSwitch($event)"><div class="toggle-group"><label class="btn" ng-class="onComputedClass"></label><label class="btn active" ng-class="offComputedClass"></label><span class="btn btn-default" ng-class="handleComputedClass"></span></div></div>',scope:{ngModel:"="},require:["toggle","ngModel"],controller:"ToggleController",controllerAs:"toggle",compile:function(e,t,l){return{post:function(e,t,l,n){var a=n[0],o=n[1];a.element=t,a.init(o)},pre:function(){}}}}})}();